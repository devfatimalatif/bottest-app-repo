name: Build and Deploy to ECR and Lambda

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      IMAGE_REPO_NAME: <your-image-repo-name> # Replace with your ECR repository name
      IMAGE_TAG: latest
      AWS_ACCOUNT_ID: <your-aws-account-id> # Replace with your AWS account ID
      LAMBDA_FUNCTION_NAME: bottest-function

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Amazon ECR
        id: login-ecr
        run: |
          echo Logging in to Amazon ECR...
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Build the Docker image
        run: |
          echo Build started on $(date)
          echo Building the Docker image...
          docker build -t "$IMAGE_REPO_NAME":"$IMAGE_TAG" .
          docker images
          docker tag "$IMAGE_REPO_NAME":"$IMAGE_TAG" "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG"

      - name: Push the Docker image
        run: |
          echo Build completed on $(date)
          echo Pushing the Docker image...
          docker push "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: $AWS_REGION

      - name: Update Lambda function
        run: |
          aws lambda update-function-code --function-name $LAMBDA_FUNCTION_NAME --image-uri "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG"
